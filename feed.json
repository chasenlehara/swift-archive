{
	"version": "https://jsonfeed.org/version/1",
	"title": "Chasen",
	"icon": "https://micro.blog/chasen/avatar.jpg",
	"home_page_url": "https://swift.chasen.dev/",
	"feed_url": "https://swift.chasen.dev/feed.json",
	"items": [
		
			{
				"id": "http://chasen.micro.blog/2024/10/13/day-was-really.html",
				
				"content_html": "<p>Day 22 was really easy—added the score counter and a different alert for when the game is “over.” #100DaysOfSwiftUI</p>\n<!-- raw HTML omitted -->\n",
				"content_text": "Day 22 was really easy—added the score counter and a different alert for when the game is “over.” #100DaysOfSwiftUI\n\n<img src=\"uploads/2024/98afe8fdd8.png\" width=\"302\" height=\"600\" alt=\"The iOS simulator displays a flag quiz game with the title “Guess the Flag.” The prompt says “Tap the flag of Spain.” Three flag options are shown: the Ukrainian flag on top, the Spanish flag in the middle, and the U.S. flag on the bottom. An alert over the flags reads “Correct” with a final score of 8. A “Restart” button is visible.\">\n",
				"date_published": "2024-10-13T08:33:51-07:00",
				"url": "https://swift.chasen.dev/2024/10/13/day-was-really.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/10/11/day-had-us.html",
				
				"content_html": "<p>Day 21 had us building a mini flag-guessing game, but without the score implemented. I will be absolutely shocked, shocked I say when we implement the score as the next day’s challenge. 🇺🇸 🇺🇦 🇪🇸 #100DaysOfSwiftUI</p>\n<!-- raw HTML omitted -->\n",
				"content_text": "Day 21 had us building a mini flag-guessing game, but without the score implemented. I will be absolutely shocked, shocked I say when we implement the score as the next day’s challenge. 🇺🇸 🇺🇦 🇪🇸 #100DaysOfSwiftUI\n\n<img src=\"uploads/2024/4103e52f0e.png\" width=\"302\" height=\"600\" alt=\"The iOS simulator shows a game titled Guess the Flag. The user is prompted to tap the flag of Spain. Three flags are displayed in a vertical list: the United States flag, the Ukraine flag, and the Spain flag at the bottom. Below the flags, the score reads Score: ???\">\n",
				"date_published": "2024-10-11T20:59:59-07:00",
				"url": "https://swift.chasen.dev/2024/10/11/day-had-us.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/10/11/day-is-all.html",
				
				"content_html": "<p>Day 20 is all about stacks, gradients, buttons, and images. I find it more fun to keep <em>all</em> the sample code in one project and let it pile up. 🤪 #100DaysOfSwiftUI</p>\n<!-- raw HTML omitted -->\n",
				"content_text": "Day 20 is all about stacks, gradients, buttons, and images. I find it more fun to keep *all* the sample code in one project and let it pile up. 🤪 #100DaysOfSwiftUI\n\n<img src=\"uploads/2024/35cfe2c333.png\" width=\"302\" height=\"600\" alt=\"A screenshot from the iPhone simulator that displays a UI with various buttons and text elements.The screen is absolute chaos. The top shows repeated labels for “First,” “Second,” and “Third.” There are many different linear, radial, and angular gradient backgrounds. Below are colorful buttons labeled “Button 1” through “Button 4,” a red “Tap me” button, and “Edit” buttons. Two “Show Alert” links are at the bottom.\">\n",
				"date_published": "2024-10-11T08:25:53-07:00",
				"url": "https://swift.chasen.dev/2024/10/11/day-is-all.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/10/10/225714.html",
				
				"content_html": "<p>Uh oh… <a href=\"https://lbpost.com/news/boil-water-long-beach-notice-water-main-break/\">lbpost.com/news/boil&hellip;</a></p>\n<!-- raw HTML omitted -->\n",
				"content_text": "Uh oh… [lbpost.com/news/boil...](https://lbpost.com/news/boil-water-long-beach-notice-water-main-break/)\n\n<img src=\"uploads/2024/49b1539ab9.jpg\" width=\"600\" height=\"448\" alt=\"Emergency Alert&10;LB Utilities: A Boil Water Notice is in effect for the following Long Beach zip codes - 90805, 90807, and part of 90806. Residents are advised to use boiled or bottled water for drinking and food preparation until further notice. LB Utilities will inform residents when water testing confirms it is safe to drink. For more information call 562-570-2390\">\n",
				"date_published": "2024-10-10T22:57:14-07:00",
				"url": "https://swift.chasen.dev/2024/10/10/225714.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/10/10/oh-macos-previews.html",
				
				"content_html": "<p>Oh macOS Preview’s signature feature, I love you but this is not acceptable. 😅</p>\n<!-- raw HTML omitted -->\n",
				"content_text": "Oh macOS Preview’s signature feature, I love you but this is not acceptable. 😅\n\n<img src=\"uploads/2024/008b5e4c32.png\" width=\"546\" height=\"600\" alt=\"The macOS signature capture screen with the “Camera” tab selected. A series of completely erratic squiggly lines is visible above a blue line.\">\n",
				"date_published": "2024-10-10T07:43:18-07:00",
				"url": "https://swift.chasen.dev/2024/10/10/oh-macos-previews.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/10/09/what-does-the.html",
				
				"content_html": "<p>What does the Swift community use for code formatting/linting?</p>\n<p>Ideally I’d like to have something that only runs when I invoke it with a keyboard shortcut or maybe on every save.</p>\n",
				"content_text": "What does the Swift community use for code formatting/linting?\n\nIdeally I’d like to have something that only runs when I invoke it with a keyboard shortcut or maybe on every save.\n",
				"date_published": "2024-10-09T19:51:18-07:00",
				"url": "https://swift.chasen.dev/2024/10/09/what-does-the.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/10/09/day-very-fun.html",
				
				"content_html": "<p>Day 19, very fun to have a day focused on building a new app from scratch! This was my take on <a href=\"https://www.hackingwithswift.com/100/swiftui/19\">the challenge</a>. #100DaysOfSwiftUI</p>\n<!-- raw HTML omitted -->\n",
				"content_text": "Day 19, very fun to have a day focused on building a new app from scratch! This was my take on [the challenge](https://www.hackingwithswift.com/100/swiftui/19). #100DaysOfSwiftUI\n\n<img src=\"https://cdn.uploads.micro.blog/177243/2024/image.png\" width=\"303\" height=\"600\" alt=\"A unit conversion app running in the iPhone 16 simulator. The screen displays options to convert between Celsius, Fahrenheit, and Kelvin. The conversion is set to convert from Celsius to Fahrenheit, with an input value of 28, resulting in 82.4 displayed as the output. The design is minimal, with a clean white background and simple buttons.\">\n",
				"date_published": "2024-10-09T19:50:47-07:00",
				"url": "https://swift.chasen.dev/2024/10/09/day-very-fun.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/10/08/day-is-a.html",
				
				"content_html": "<p>Day 18 is a short quiz and adding some new code on our own without any guidance—it took so little time (9 minutes 😝) that I’m tempted to just start on the next day, but I will resist! #100DaysOfSwiftUI</p>\n",
				"content_text": "Day 18 is a short quiz and adding some new code on our own without any guidance—it took so little time (9 minutes 😝) that I’m tempted to just start on the next day, but I will resist! #100DaysOfSwiftUI\n",
				"date_published": "2024-10-08T21:00:45-07:00",
				"url": "https://swift.chasen.dev/2024/10/08/day-is-a.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/10/07/this-definitely-trips.html",
				
				"content_html": "<p>This definitely trips me up:</p>\n<blockquote>\n<p>Tip: It’s tempting to think that modifier should be attached to the end of the <code>NavigationStack</code>, but it needs to be attached to the end of the <code>Form</code> instead. The reason is that navigation stacks are capable of showing many views as your program runs, so by attaching the title to the thing inside the navigation stack we’re allowing iOS to change titles freely.</p>\n</blockquote>\n<p>I’m not sure I 100% understand the reasoning here… excited to learn more. It’s still only day 17! #100DaysOfSwiftUI</p>\n",
				"content_text": "This definitely trips me up:\n\n> Tip: It’s tempting to think that modifier should be attached to the end of the `NavigationStack`, but it needs to be attached to the end of the `Form` instead. The reason is that navigation stacks are capable of showing many views as your program runs, so by attaching the title to the thing inside the navigation stack we’re allowing iOS to change titles freely.\n\nI’m not sure I 100% understand the reasoning here… excited to learn more. It’s still only day 17! #100DaysOfSwiftUI\n",
				"date_published": "2024-10-07T21:36:39-07:00",
				"url": "https://swift.chasen.dev/2024/10/07/this-definitely-trips.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/10/06/i-have-a.html",
				
				"content_html": "<p>I have a lot to learn about what enables this syntax for two-way binding (note the <code>$</code>):</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-swift\" data-lang=\"swift\"><span style=\"color:#66d9ef\">struct</span> <span style=\"color:#a6e22e\">ContentView</span>: View {\n    @State <span style=\"color:#66d9ef\">private</span> <span style=\"color:#66d9ef\">var</span> name = <span style=\"color:#e6db74\">&#34;&#34;</span>\n\n    <span style=\"color:#66d9ef\">var</span> body: some View {\n        Form {\n            TextField(<span style=\"color:#e6db74\">&#34;Enter your name&#34;</span>, text: <span style=\"color:#960050;background-color:#1e0010\">$</span>name)\n            Text(<span style=\"color:#e6db74\">&#34;Hello, world!&#34;</span>)\n        }\n    }\n}\n</code></pre></div>",
				"content_text": "I have a lot to learn about what enables this syntax for two-way binding (note the `$`):\n\n```swift\nstruct ContentView: View {\n    @State private var name = \"\"\n\n    var body: some View {\n        Form {\n            TextField(\"Enter your name\", text: $name)\n            Text(\"Hello, world!\")\n        }\n    }\n}\n```\n",
				"date_published": "2024-10-06T20:49:00-07:00",
				"url": "https://swift.chasen.dev/2024/10/06/i-have-a.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/10/06/day-starting-off.html",
				
				"content_html": "<p>Day 16, starting off with creating a new iOS app in Xcode and seeing everything that’s changed since I last used it almost 12 years ago. Hitting Run for the first time… ah it’s so exciting! #100DaysOfSwiftUI</p>\n",
				"content_text": "Day 16, starting off with creating a new iOS app in Xcode and seeing everything that’s changed since I last used it almost 12 years ago. Hitting Run for the first time… ah it’s so exciting! #100DaysOfSwiftUI\n",
				"date_published": "2024-10-06T20:47:26-07:00",
				"url": "https://swift.chasen.dev/2024/10/06/day-starting-off.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/10/05/i-might-not.html",
				
				"content_html": "<p>I might not do day 16 tomorrow, we’ll see… running the Long Beach half-marathon in the morning. 😃</p>\n",
				"content_text": "I might not do day 16 tomorrow, we’ll see… running the Long Beach half-marathon in the morning. 😃\n",
				"date_published": "2024-10-05T20:45:56-07:00",
				"url": "https://swift.chasen.dev/2024/10/05/i-might-not.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/10/05/day-is-a.html",
				
				"content_html": "<p>Day 15 is a review of the last two weeks of material! #100DaysOfSwiftUI</p>\n<p>I kept on going back to the individual pages to find the syntax I needed while working on the tests, so I’m happy to have it all on one page: <a href=\"https://www.hackingwithswift.com/articles/242/learn-essential-swift-in-one-hour\">www.hackingwithswift.com/articles/&hellip;</a></p>\n",
				"content_text": "Day 15 is a review of the last two weeks of material! #100DaysOfSwiftUI\n\nI kept on going back to the individual pages to find the syntax I needed while working on the tests, so I’m happy to have it all on one page: [www.hackingwithswift.com/articles/...](https://www.hackingwithswift.com/articles/242/learn-essential-swift-in-one-hour)\n",
				"date_published": "2024-10-05T20:45:04-07:00",
				"url": "https://swift.chasen.dev/2024/10/05/day-is-a.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/10/04/day-is-optionals.html",
				
				"content_html": "<p>Day 14 is optionals, guards, nil coalescing, optional chaining, and optional try.</p>\n<p>Guards are new to me but I like them:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-swift\" data-lang=\"swift\"><span style=\"color:#66d9ef\">func</span> <span style=\"color:#a6e22e\">double</span>(number: Int?) -&gt; Int? {\n\t<span style=\"color:#66d9ef\">guard</span> <span style=\"color:#66d9ef\">let</span> number = number <span style=\"color:#66d9ef\">else</span> {\n\t\t<span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">nil</span>\n\t}\n\t<span style=\"color:#66d9ef\">return</span> number <span style=\"color:#f92672\">*</span> <span style=\"color:#ae81ff\">2</span>\n}\n</code></pre></div><p>Two weeks in the books! #100DaysOfSwiftUI</p>\n",
				"content_text": "Day 14 is optionals, guards, nil coalescing, optional chaining, and optional try. \n\nGuards are new to me but I like them:\n\n```swift\nfunc double(number: Int?) -> Int? {\n\tguard let number = number else {\n\t\treturn nil\n\t}\n\treturn number * 2\n}\n```\n\nTwo weeks in the books! #100DaysOfSwiftUI\n",
				"date_published": "2024-10-04T20:35:17-07:00",
				"url": "https://swift.chasen.dev/2024/10/04/day-is-optionals.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/10/03/my-series-has.html",
				
				"content_html": "<p>My Series 10 has had really inconsistent battery life (it died on me 8 miles into a run last week 🙃) so I’m happy to see potential fixes in this watchOS update.</p>\n<!-- raw HTML omitted -->\n",
				"content_text": "My Series 10 has had really inconsistent battery life (it died on me 8 miles into a run last week 🙃) so I’m happy to see potential fixes in this watchOS update.\n\n<img src=\"https://cdn.uploads.micro.blog/177243/2024/5d3413e8d5.jpg\" width=\"533\" height=\"600\" alt=\"\">\n",
				"date_published": "2024-10-03T20:46:14-07:00",
				"url": "https://swift.chasen.dev/2024/10/03/my-series-has.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/10/03/prototypes-opaque-return.html",
				
				"content_html": "<p>Prototypes, opaque return types, extensions, and protocol extensions don’t have equivalents in JavaScript (and my TypeScript isn’t good enough to compare Swift to TS), but these concepts were straightforward enough that I breezed through day 13. #100DaysOfSwiftUI</p>\n",
				"content_text": "Prototypes, opaque return types, extensions, and protocol extensions don’t have equivalents in JavaScript (and my TypeScript isn’t good enough to compare Swift to TS), but these concepts were straightforward enough that I breezed through day 13. #100DaysOfSwiftUI\n",
				"date_published": "2024-10-03T20:41:16-07:00",
				"url": "https://swift.chasen.dev/2024/10/03/prototypes-opaque-return.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/10/02/copies-of-the.html",
				
				"content_html": "<blockquote>\n<p>copies of the same class share their underlying data, meaning that changing one changes them all, whereas structs always have their own unique data, and changing a copy does not affect the others.</p>\n</blockquote>\n<p>I found this explanation confusing until I took the test and realized the difference.</p>\n<p>In JS, creating an object or class instance and assigning it to two different variables matches the “copy” semantics above (the variable is a reference to the object).</p>\n<p>The “struct” behavior (by value) is how primitives work in JS (string, bool, etc.). Objects never work this way.</p>\n<p>Day 12 over! #100DaysOfSwiftUI</p>\n",
				"content_text": "> copies of the same class share their underlying data, meaning that changing one changes them all, whereas structs always have their own unique data, and changing a copy does not affect the others.\n\nI found this explanation confusing until I took the test and realized the difference.\n\nIn JS, creating an object or class instance and assigning it to two different variables matches the “copy” semantics above (the variable is a reference to the object).\n\nThe “struct” behavior (by value) is how primitives work in JS (string, bool, etc.). Objects never work this way.\n\nDay 12 over! #100DaysOfSwiftUI\n",
				"date_published": "2024-10-02T19:11:29-07:00",
				"url": "https://swift.chasen.dev/2024/10/02/copies-of-the.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/10/01/structs-part-two.html",
				
				"content_html": "<p>Structs (part two) with a checkpoint… day 11 was pretty straightforward! #100DaysOfSwiftUI</p>\n",
				"content_text": "Structs (part two) with a checkpoint… day 11 was pretty straightforward! #100DaysOfSwiftUI\n",
				"date_published": "2024-10-01T21:38:29-07:00",
				"url": "https://swift.chasen.dev/2024/10/01/structs-part-two.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/09/30/structs-mutating-on.html",
				
				"content_html": "<p>Structs, <code>mutating</code> on methods, computed properties, property observers, custom initializers… it’s a lot but it was pretty easy to get through.</p>\n<p>I think the only “new” concept (coming from JavaScript) was marking methods as <code>mutating</code>.</p>\n<p>Day 10 done so 10% of the way there! #100DaysOfSwiftUI</p>\n",
				"content_text": "Structs, `mutating` on methods, computed properties, property observers, custom initializers… it’s a lot but it was pretty easy to get through.\n\nI think the only “new” concept (coming from JavaScript) was marking methods as `mutating`.\n\nDay 10 done so 10% of the way there! #100DaysOfSwiftUI\n",
				"date_published": "2024-09-30T20:10:17-07:00",
				"url": "https://swift.chasen.dev/2024/09/30/structs-mutating-on.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/09/29/dropping-the-parenthesis.html",
				
				"content_html": "<p>Dropping the parenthesis when calling functions with a closure blows my mind:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-swift\" data-lang=\"swift\">team.filter { $0.hasPrefix(<span style=\"color:#e6db74\">&#34;T&#34;</span>) }\n</code></pre></div><p>The equivalent in JS:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-js\" data-lang=\"js\"><span style=\"color:#a6e22e\">team</span>.<span style=\"color:#a6e22e\">filter</span>(<span style=\"color:#a6e22e\">$0</span> =&gt; <span style=\"color:#a6e22e\">$0</span>.<span style=\"color:#a6e22e\">startsWith</span>(<span style=\"color:#e6db74\">&#34;T&#34;</span>))\n</code></pre></div><p>Woo! The checkpoint test actually didn’t take me very long to complete.</p>\n<p>Day 9 in the books! #100DaysOfSwiftUI</p>\n",
				"content_text": "Dropping the parenthesis when calling functions with a closure blows my mind:\n\n```swift\nteam.filter { $0.hasPrefix(\"T\") }\n```\n\nThe equivalent in JS:\n\n```js\nteam.filter($0 => $0.startsWith(\"T\"))\n```\n\nWoo! The checkpoint test actually didn’t take me very long to complete.\n\nDay 9 in the books! #100DaysOfSwiftUI\n",
				"date_published": "2024-09-29T22:33:23-07:00",
				"url": "https://swift.chasen.dev/2024/09/29/dropping-the-parenthesis.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/09/28/really-interesting-that.html",
				
				"content_html": "<p>Really interesting that Swift has <code>do</code>, <em>but it’s not what you think!</em></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-swift\" data-lang=\"swift\"><span style=\"color:#66d9ef\">do</span> {\n    <span style=\"color:#66d9ef\">try</span> throwingFunction1()\n    nonThrowingFunction1()\n} <span style=\"color:#66d9ef\">catch</span> {\n    print(<span style=\"color:#e6db74\">&#34;Handle errors here&#34;</span>)\n}\n</code></pre></div><p>In JS, that <code>do</code> would be <code>try</code> and no “try” is required before a throwing function.</p>\n<p>Day 8 in the books! #100DaysOfSwiftUI</p>\n",
				"content_text": "Really interesting that Swift has `do`, _but it’s not what you think!_\n\n```swift\ndo {\n    try throwingFunction1()\n    nonThrowingFunction1()\n} catch {\n    print(\"Handle errors here\")\n}\n```\n\nIn JS, that `do` would be `try` and no “try” is required before a throwing function.\n\nDay 8 in the books! #100DaysOfSwiftUI\n",
				"date_published": "2024-09-28T21:31:33-07:00",
				"url": "https://swift.chasen.dev/2024/09/28/really-interesting-that.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/09/27/awesome-to-me.html",
				
				"content_html": "<p>Awesome to me that this is valid:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-swift\" data-lang=\"swift\"><span style=\"color:#66d9ef\">func</span> <span style=\"color:#a6e22e\">record</span>(age: Int) { }\n<span style=\"color:#66d9ef\">func</span> <span style=\"color:#a6e22e\">record</span>(year: Int) { }\n</code></pre></div><p>Naming internal and external parameters separately is interesting too:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-swift\" data-lang=\"swift\"><span style=\"color:#66d9ef\">func</span> <span style=\"color:#a6e22e\">square</span>(of num: Int) -&gt; Int {\n    <span style=\"color:#66d9ef\">return</span> num <span style=\"color:#f92672\">*</span> num\n}\n\n<span style=\"color:#66d9ef\">let</span> result = square(of: <span style=\"color:#ae81ff\">4</span>)\n</code></pre></div><p>Day 7 in the books! #100DaysOfSwiftUI</p>\n",
				"content_text": "Awesome to me that this is valid:\n\n```swift\nfunc record(age: Int) { }\nfunc record(year: Int) { }\n```\n\nNaming internal and external parameters separately is interesting too:\n\n```swift\nfunc square(of num: Int) -> Int {\n    return num * num\n}\n\nlet result = square(of: 4)\n```\n\nDay 7 in the books! #100DaysOfSwiftUI\n",
				"date_published": "2024-09-27T20:46:38-07:00",
				"url": "https://swift.chasen.dev/2024/09/27/awesome-to-me.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/09/26/day-is-all.html",
				
				"content_html": "<p>Day 6 is all about <code>for</code> and <code>while</code> loops.</p>\n<p>I’ll be excited to learn the <code>.map</code> and <code>.filter</code> equivalents. I rarely use <code>for</code> loops in JS and have only used <code>while</code> a couple times in my career. 🫢</p>\n<p>I wasn’t expecting to do FizzBuzz for the checkpoint test. There’s a first time for everything! #100DaysOfSwiftUI</p>\n",
				"content_text": "Day 6 is all about `for` and `while` loops.\n\nI’ll be excited to learn the `.map` and `.filter` equivalents. I rarely use `for` loops in JS and have only used `while` a couple times in my career. 🫢\n\nI wasn’t expecting to do FizzBuzz for the checkpoint test. There’s a first time for everything! #100DaysOfSwiftUI\n",
				"date_published": "2024-09-26T22:09:12-07:00",
				"url": "https://swift.chasen.dev/2024/09/26/day-is-all.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/09/26/my-comment-about.html",
				
				"content_html": "<p>My comment about no <code>===</code> in Swift was incorrect, thanks Matt!</p>\n<p>I should know that a beginner course isn’t going to immediately explain referential equality, that won’t make sense yet.</p>\n<p><a href=\"https://mastodon.social/@mattiem/113203444245305184\">https://mastodon.social/@mattiem/113203444245305184</a></p>\n",
				"content_text": "My comment about no `===` in Swift was incorrect, thanks Matt!\n\nI should know that a beginner course isn’t going to immediately explain referential equality, that won’t make sense yet.\n\nhttps://mastodon.social/@mattiem/113203444245305184\n",
				"date_published": "2024-09-26T21:59:43-07:00",
				"url": "https://swift.chasen.dev/2024/09/26/my-comment-about.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/09/25/no-in-swift.html",
				
				"content_html": "<p>No <code>===</code> in Swift (just <code>==</code>) is nice!</p>\n<p>Enums being comparable is pretty cool too.</p>\n<p>And <code>switch</code> statements… is this the day I confess that I tend not to use them in JavaScript? Swift’s <code>fallthrough</code> syntax seems much safer than JS needing a <code>break</code> for each <code>case</code>.</p>\n<p>Day 5 done! #100DaysOfSwiftUI</p>\n",
				"content_text": "No `===` in Swift (just `==`) is nice!\n\nEnums being comparable is pretty cool too.\n\nAnd `switch` statements… is this the day I confess that I tend not to use them in JavaScript? Swift’s `fallthrough` syntax seems much safer than JS needing a `break` for each `case`.\n\nDay 5 done! #100DaysOfSwiftUI\n",
				"date_published": "2024-09-25T19:57:05-07:00",
				"url": "https://swift.chasen.dev/2024/09/25/no-in-swift.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/09/24/this-is-really.html",
				
				"content_html": "<p>This is really interesting:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-swift\" data-lang=\"swift\"><span style=\"color:#66d9ef\">let</span> name: String\n<span style=\"color:#75715e\">// …</span>\nname = <span style=\"color:#e6db74\">&#34;Chasen&#34;</span>\n<span style=\"color:#75715e\">// Allowed once</span>\n</code></pre></div><p>In JavaScript, the “equivalent” (using <code>const</code>) <em>requires</em> an initial value and doesn’t let you reassign it later. I like that Swift allows it be undefined and assigned just once.</p>\n<p>Day 4 done! #100DaysOfSwiftUI</p>\n",
				"content_text": "This is really interesting:\n\n```swift\nlet name: String\n// …\nname = \"Chasen\"\n// Allowed once\n```\n\nIn JavaScript, the “equivalent” (using `const`) _requires_ an initial value and doesn’t let you reassign it later. I like that Swift allows it be undefined and assigned just once.\n\nDay 4 done! #100DaysOfSwiftUI\n",
				"date_published": "2024-09-24T18:31:20-07:00",
				"url": "https://swift.chasen.dev/2024/09/24/this-is-really.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/09/23/coming-from-js.html",
				
				"content_html": "<p>Coming from JS, there are some small differences in array and dictionary syntax. This really stood out to me (as nice and explicit):</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-swift\" data-lang=\"swift\"><span style=\"color:#66d9ef\">let</span> olympics = [\n    <span style=\"color:#ae81ff\">2016</span>: <span style=\"color:#e6db74\">&#34;Rio de Janeiro&#34;</span>,\n    <span style=\"color:#ae81ff\">2021</span>: <span style=\"color:#e6db74\">&#34;Tokyo&#34;</span>,\n    <span style=\"color:#ae81ff\">2024</span>: <span style=\"color:#e6db74\">&#34;Paris&#34;</span>\n]\n\nprint(olympics[<span style=\"color:#ae81ff\">2020</span>, <span style=\"color:#66d9ef\">default</span>: <span style=\"color:#e6db74\">&#34;Unknown&#34;</span>])\n</code></pre></div><p>Day 3 in the books! #100DaysOfSwiftUI</p>\n",
				"content_text": "Coming from JS, there are some small differences in array and dictionary syntax. This really stood out to me (as nice and explicit):\n\n```swift\nlet olympics = [\n    2016: \"Rio de Janeiro\",\n    2021: \"Tokyo\",\n    2024: \"Paris\"\n]\n\nprint(olympics[2020, default: \"Unknown\"])\n```\n\nDay 3 in the books! #100DaysOfSwiftUI\n",
				"date_published": "2024-09-23T19:00:39-07:00",
				"url": "https://swift.chasen.dev/2024/09/23/coming-from-js.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/09/22/this-has-a.html",
				
				"content_html": "<p>This has a bug… can you spot it?</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-swift\" data-lang=\"swift\"><span style=\"color:#66d9ef\">let</span> temperature = <span style=\"color:#ae81ff\">29</span>\n<span style=\"color:#66d9ef\">let</span> converted = (temperature <span style=\"color:#f92672\">*</span> <span style=\"color:#ae81ff\">9</span> <span style=\"color:#f92672\">/</span> <span style=\"color:#ae81ff\">5</span>) <span style=\"color:#f92672\">+</span> <span style=\"color:#ae81ff\">32</span>\nprint(<span style=\"color:#e6db74\">&#34;Celsius: </span><span style=\"color:#e6db74\">\\(</span>temperature<span style=\"color:#e6db74\">)</span><span style=\"color:#e6db74\">&#34;</span>)\nprint(<span style=\"color:#e6db74\">&#34;Fahrenheit: </span><span style=\"color:#e6db74\">\\(</span>converted<span style=\"color:#e6db74\">)</span><span style=\"color:#e6db74\">&#34;</span>)\n</code></pre></div><p>I thought the compiler might warn when losing precision like this, but I guess not!</p>\n<p>Day 2 in the books! #100DaysOfSwiftUI</p>\n",
				"content_text": "This has a bug… can you spot it?\n\n```swift\nlet temperature = 29\nlet converted = (temperature * 9 / 5) + 32\nprint(\"Celsius: \\(temperature)\")\nprint(\"Fahrenheit: \\(converted)\")\n```\n\nI thought the compiler might warn when losing precision like this, but I guess not!\n\nDay 2 in the books! #100DaysOfSwiftUI\n",
				"date_published": "2024-09-22T20:32:56-07:00",
				"url": "https://swift.chasen.dev/2024/09/22/this-has-a.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/09/22/the-verges-article.html",
				
				"content_html": "<p>The Verge’s article on the iPhone 16 Pro made me realize that the “rich contrast” photographic style is where it’s at on my 15 Pro. <a href=\"https://www.theverge.com/24247538/apple-iphone-16-pro-review\">www.theverge.com/24247538/&hellip;</a></p>\n<p><!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n",
				"content_text": "The Verge’s article on the iPhone 16 Pro made me realize that the “rich contrast” photographic style is where it’s at on my 15 Pro. [www.theverge.com/24247538/...](https://www.theverge.com/24247538/apple-iphone-16-pro-review)\n\n<img src=\"https://cdn.uploads.micro.blog/177243/2024/image.jpg\" width=\"499\" height=\"600\" alt=\"\"><img src=\"https://cdn.uploads.micro.blog/177243/2024/269a779080.jpg\" width=\"431\" height=\"600\" alt=\"\">\n",
				"date_published": "2024-09-22T11:34:16-07:00",
				"url": "https://swift.chasen.dev/2024/09/22/the-verges-article.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/09/22/it-feels-like.html",
				
				"content_html": "<p>It feels like some apps (like Passwords) get a lot of love and attention at Apple, while others languish. I wonder if the difference is in management, developer care, director priorities, or something else. <a href=\"https://hachyderm.io/@rmondello/113181667296070884\">hachyderm.io/@rmondell&hellip;</a></p>\n",
				"content_text": "It feels like some apps (like Passwords) get a lot of love and attention at Apple, while others languish. I wonder if the difference is in management, developer care, director priorities, or something else. [hachyderm.io/@rmondell...](https://hachyderm.io/@rmondello/113181667296070884)\n",
				"date_published": "2024-09-22T10:31:49-07:00",
				"url": "https://swift.chasen.dev/2024/09/22/it-feels-like.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/09/21/im-going-to.html",
				
				"content_html": "<p>I’m going to compare Swift to JavaScript <em>a lot</em> as I get up to speed.</p>\n<p>Seems like Swift’s var == let (in JS) and let == const. I’m sure that won’t trip me up…</p>\n<p>Interesting that <code>1_00__00___00____00</code> is valid in Swift (JS only allows one separator per digit, not multiple).</p>\n",
				"content_text": "I’m going to compare Swift to JavaScript *a lot* as I get up to speed.\n\nSeems like Swift’s var == let (in JS) and let == const. I’m sure that won’t trip me up…\n\nInteresting that `1_00__00___00____00` is valid in Swift (JS only allows one separator per digit, not multiple).\n",
				"date_published": "2024-09-21T21:30:48-07:00",
				"url": "https://swift.chasen.dev/2024/09/21/im-going-to.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/09/21/is-it-cheating.html",
				
				"content_html": "<p>Is it cheating to do Day 1 on the same day as Day 0? 🙈 #100DaysOfSwiftUI</p>\n",
				"content_text": "Is it cheating to do Day 1 on the same day as Day 0? 🙈 #100DaysOfSwiftUI\n",
				"date_published": "2024-09-21T21:30:10-07:00",
				"url": "https://swift.chasen.dev/2024/09/21/is-it-cheating.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/09/21/cute-that-theres.html",
				
				"content_html": "<p>Cute that there’s a Day 0 to kick things off, with this as reading material: <a href=\"https://www.hackingwithswift.com/articles/230/how-to-become-an-ios-developer\">www.hackingwithswift.com/articles/&hellip;</a></p>\n<p>I’m not trying to get a job as an iOS dev and I have a ton of dev experience; learning SwiftUI is a little hobby for me.</p>\n<p>#100DaysOfSwiftUI</p>\n",
				"content_text": "Cute that there’s a Day 0 to kick things off, with this as reading material: [www.hackingwithswift.com/articles/...](https://www.hackingwithswift.com/articles/230/how-to-become-an-ios-developer)\n\nI’m not trying to get a job as an iOS dev and I have a ton of dev experience; learning SwiftUI is a little hobby for me.\n\n#100DaysOfSwiftUI\n",
				"date_published": "2024-09-21T20:44:31-07:00",
				"url": "https://swift.chasen.dev/2024/09/21/cute-that-theres.html"
			},
			{
				"id": "http://chasen.micro.blog/2024/09/21/im-stoked-to.html",
				
				"content_html": "<p>I’m stoked to start my Swift journey by following the 100 Days of Swift UI course: <a href=\"https://www.hackingwithswift.com/100/swiftui\">www.hackingwithswift.com/100/swift&hellip;</a> #100DaysOfSwiftUI</p>\n",
				"content_text": "I’m stoked to start my Swift journey by following the 100 Days of Swift UI course: [www.hackingwithswift.com/100/swift...](https://www.hackingwithswift.com/100/swiftui) #100DaysOfSwiftUI\n",
				"date_published": "2024-09-21T20:33:40-07:00",
				"url": "https://swift.chasen.dev/2024/09/21/im-stoked-to.html"
			}
	]
}
